D:\Du Hast\MicroProcessor Lab\Lab 5\tutor.lst - generated by MGTEK Assembler ASM11 V1.26 Build 144 for WIN32 (x86) - Tue Apr 21 10:11:47 2020

    1:          =0000FFBE                   OUT1BSP EQU     $FFBE ;
    2:                                      
    3:          =00000000                           ORG     $00
D:\Du Hast\MicroProcessor Lab\Lab 5\tutor.asm(4): Warning A4304: col(12) obsolete directive
    4:     0000 0A                          COUNTER FCB     10
    5:                                      
    6:          =0000B600                           ORG     $B600 ;
    7:                                      
    8:     B600 8E 01FF                [03]         LDS     #$01FF        ;
    9:     B603 FC 0500                [05]         LDD     $0500        ;
   10:                                      
   11:     B606 36                     [03] MAIN    PSHA            ;    PUSH A INTO STACK
   12:     B607 37                     [03]         PSHB            ;    PUSH B INTO STACK
   13:     B608 36                     [03]         PSHA            ;    "           "
   14:     B609 37                     [03]         PSHB            ;    "           "
   15:     B60A 8D 0B                  [06]         BSR     PRIME         ;    FIND IF PRIME
   16:     B60C 32                     [04]         PULA            ;    PULL A FROM STACK
   17:     B60D 33                     [04]         PULB            ;    "    B               "
   18:     B60E 5C                     [02]         INCB            ;    ADD 1 TO B FOR NEXT NUMBER CHECK
   19:     B60F 89 00                  [02]         ADCA    #$00         ;    ADD CARRY
   20:     B611 7A 0000                [06]         DEC     COUNTER     ;    DECREASE COUNTER
   21:     B614 26 F0                  [03]         BNE     MAIN        ;    BRANCH BACK IF NOT EQUAL TO 0
   22:     B616 3F                     [0E]         SWI            ;
   23:                                      
   24:                                      
   25:     B617 32                     [04] PRIME   PULA        ;    PULL A FROM STACK TO BEGIN PRIME CHECKING
   26:     B618 38                     [05]         PULX        ;    PULL X FROM STACK 
   27:     B619 36                     [03]         PSHA        ;    PUSH A INTO STACK
   28:     B61A 3C                     [04]         PSHX        ;    PUSH X INTO STACK
   29:     B61B 38                     [05]         PULX        ;
   30:     B61C 3C                     [04]         PSHX
   31:     B61D 09                     [03] LOOP    DEX        ;    DECREASE POINTER
   32:     B61E 32                     [04]         PULA        ;
   33:     B61F 33                     [04]         PULB        ;
   34:     B620 36                     [03]         PSHA        ;
   35:     B621 37                     [03]         PSHB        ;
   36:     B622 3C                     [04]         PSHX        ;
   37:     B623 02                     [29]         IDIV        ;    PERFORM DIVISION CHECK
   38:     B624 38                     [05]         PULX        ;
   39:     B625 5D                     [02]         TSTB        ;    TEST B
   40:     B626 26 02                  [03]         BNE     FINISH     ;    BRANCH TO LAST SUBROUTINE UNTIL 0
   41:     B628 4D                     [02]         TSTA        ;    TEST A
   42:     B629 39                     [05]         RTS    ;
   43:                                      
   44:     B62A 8C 0002                [04] FINISH  CPX     #$0002     ;    COMPARE X WITH VALUE STORED IN MEMORY LOCATION 2
   45:     B62D 26 EE                  [03]         BNE     LOOP     ;
   46:     B62F 32                     [04]         PULA        ;
D:\Du Hast\MicroProcessor Lab\Lab 5\tutor.asm(47): Error A2038: col(21) 'outa': undefined symbol
   47:                                              JSR     OUTA     ;
   48:     B630 32                     [04]         PULA        ;
D:\Du Hast\MicroProcessor Lab\Lab 5\tutor.asm(49): Error A2038: col(21) 'outa': undefined symbol
   49:                                              JSR     OUTA     ;
